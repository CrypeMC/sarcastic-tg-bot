# --- –ù–ê–ß–ê–õ–û –ü–û–õ–ù–û–ì–û –ö–û–î–ê BOT.PY (–í–ï–†–°–ò–Ø –° ASYNCIO + HYPERCORN) ---
import logging
import os
import asyncio # –û–°–ù–û–í–ê –í–°–ï–ô –ê–°–ò–ù–•–†–û–ù–ù–û–ô –ú–ê–ì–ò–ò
from collections import deque
# –£–ë–†–ê–õ–ò –ù–ê–•–£–ô THREADING
from flask import Flask # –í–µ–±-—Å–µ—Ä–≤–µ—Ä-–∑–∞–≥–ª—É—à–∫–∞ –¥–ª—è Render
import hypercorn.config # –ö–æ–Ω—Ñ–∏–≥ –Ω—É–∂–µ–Ω
from hypercorn.asyncio import serve as hypercorn_async_serve # <--- –ò–ú–ü–û–†–¢–ò–†–£–ï–ú –Ø–í–ù–û –ò –ü–ï–†–ï–ò–ú–ï–ù–û–í–´–í–ê–ï–ú!
import signal # –î–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (—Ö–æ—Ç—è asyncio.run —Å–∞–º —É–º–µ–µ—Ç)

import google.generativeai as genai
from telegram import Update, Bot
from telegram.ext import Application, CommandHandler, MessageHandler, filters, ContextTypes
from dotenv import load_dotenv # –ß—Ç–æ–±—ã —á–∏—Ç–∞—Ç—å —Ç–≤–æ–π .env —Ñ–∞–π–ª –∏–ª–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ Render

# –ó–∞–≥—Ä—É–∂–∞–µ–º —Å–µ–∫—Ä–µ—Ç—ã
load_dotenv()

# --- –ù–ê–°–¢–†–û–ô–ö–ò ---
TELEGRAM_BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
GEMINI_API_KEY = os.getenv("GEMINI_API_KEY")
MAX_MESSAGES_TO_ANALYZE = 500 # –ú–µ–Ω—è–π –Ω–∞ —Å–≤–æ–π —Å—Ç—Ä–∞—Ö –∏ —Ä–∏—Å–∫

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–ª—é—á–µ–π
if not TELEGRAM_BOT_TOKEN:
    raise ValueError("–ù–ï –ù–ê–ô–î–ï–ù TELEGRAM_BOT_TOKEN!")
if not GEMINI_API_KEY:
    raise ValueError("–ù–ï –ù–ê–ô–î–ï–ù GEMINI_API_KEY!")

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO
)
logging.getLogger("httpx").setLevel(logging.WARNING)
logging.getLogger("hypercorn").setLevel(logging.INFO) # –ß—Ç–æ–±—ã –≤–∏–¥–µ—Ç—å –ª–æ–≥–∏ Hypercorn
logger = logging.getLogger(__name__)

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Gemini ---
try:
    genai.configure(api_key=GEMINI_API_KEY)
    model = genai.GenerativeModel('gemini-1.5-flash')
    logger.info("–ú–æ–¥–µ–ª—å Gemini —É—Å–ø–µ—à–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞.")
except Exception as e:
    logger.critical(f"–ü–ò–ó–î–ï–¶ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ Gemini API: {e}", exc_info=True)
    raise SystemExit(f"–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞—Å—Ç—Ä–æ–∏—Ç—å Gemini API: {e}")

# --- –•—Ä–∞–Ω–∏–ª–∏—â–µ –∏—Å—Ç–æ—Ä–∏–∏ ---
chat_histories = {}
logger.info(f"–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞: {MAX_MESSAGES_TO_ANALYZE}")

# --- –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–û–ë–©–ï–ù–ò–ô –ò –ö–û–ú–ê–ù–î (–ë–ï–ó –ò–ó–ú–ï–ù–ï–ù–ò–ô) ---
async def store_message(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not update.message or not update.message.text or not update.message.from_user:
        return
    chat_id = update.message.chat_id
    message_text = update.message.text
    user_name = update.message.from_user.first_name or "–ê–Ω–æ–Ω–∏–º–Ω—ã–π –¥–æ–ª–±–æ–µ–±"
    if chat_id not in chat_histories:
        chat_histories[chat_id] = deque(maxlen=MAX_MESSAGES_TO_ANALYZE)
        # logger.info(f"–°–æ–∑–¥–∞–Ω–∞ –Ω–æ–≤–∞—è –∏—Å—Ç–æ—Ä–∏—è –¥–ª—è —á–∞—Ç–∞ {chat_id}") # –£–±—Ä–∞–ª –ª–∏—à–Ω–∏–π –ª–æ–≥
    chat_histories[chat_id].append(f"{user_name}: {message_text}")

async def analyze_chat(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    if not update.message or not update.message.from_user:
        return
    chat_id = update.message.chat_id
    user_name = update.message.from_user.first_name or "–≠–π —Ç—ã —Ç–∞–º"
    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{user_name}' (ID: {update.message.from_user.id}) –∑–∞–ø—Ä–æ—Å–∏–ª –∞–Ω–∞–ª–∏–∑ –≤ —á–∞—Ç–µ {chat_id}")
    min_msgs = 10
    history_len = len(chat_histories.get(chat_id, []))
    if chat_id not in chat_histories or history_len < min_msgs:
        logger.info(f"–í —á–∞—Ç–µ {chat_id} —Å–ª–∏—à–∫–æ–º –º–∞–ª–æ —Å–æ–æ–±—â–µ–Ω–∏–π ({history_len}/{min_msgs}) –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞.")
        await update.message.reply_text(
            f"–°–ª—ã—à—å, {user_name}, —Ç—ã –∑–∞–µ–±–∞–ª. –Ø —Ç—É—Ç –Ω–µ–¥–∞–≤–Ω–æ (–∏–ª–∏ –≤—ã –º–æ–ª—á–∞–ª–∏ –∫–∞–∫ —Ä—ã–±—ã), —Å–æ–æ–±—â–µ–Ω–∏–π –∫–æ—Ç –Ω–∞–ø–ª–∞–∫–∞–ª "
            f"(–≤—Å–µ–≥–æ {history_len} —à—Ç—É–∫ –≤ –º–æ–µ–π –ø–∞–º—è—Ç–∏, –∞ –Ω–∞–¥–æ —Ö–æ—Ç—è –±—ã {min_msgs}).\n"
            f"–ü–æ–ø–∏–∑–¥–∏—Ç–µ –µ—â–µ —Ö–æ—Ç—è –±—ã –Ω–µ–º–Ω–æ–≥–æ, –ø–æ—Ç–æ–º –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –≤–∞—à –±–∞–ª–∞–≥–∞–Ω.\n"
        )
        return
    messages_to_analyze = list(chat_histories[chat_id])
    conversation_text = "\n".join(messages_to_analyze)
    logger.info(f"–ù–∞—á–∏–Ω–∞—é –∞–Ω–∞–ª–∏–∑ {len(messages_to_analyze)} —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è —á–∞—Ç–∞ {chat_id}...")
    try:
        prompt = (
            f"–¢—ã - –Ω–∞–±–ª—é–¥–∞—Ç–µ–ª—å–Ω—ã–π, —è–∑–≤–∏—Ç–µ–ª—å–Ω—ã–π –∏ —Å–ª–µ–≥–∫–∞ –æ—Ç—Å—Ç—Ä–∞–Ω–µ–Ω–Ω—ã–π —Ç—Ä–æ–ª–ª—å-–∫–æ–º–º–µ–Ω—Ç–∞—Ç–æ—Ä Telegram-—á–∞—Ç–∞ —Å –æ—Ç–ª–∏—á–Ω—ã–º —á—É–≤—Å—Ç–≤–æ–º —á–µ—Ä–Ω–æ–≥–æ —é–º–æ—Ä–∞ –∏ –ø–æ—Å—Ç–∏—Ä–æ–Ω–∏–∏. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –ü–û–°–õ–ï–î–ù–ò–ô —Ñ—Ä–∞–≥–º–µ–Ω—Ç –ø–µ—Ä–µ–ø–∏—Å–∫–∏ –∏ –≤—ã—Ö–≤–∞—Ç–∏—Ç—å –∏–∑ –Ω–µ–≥–æ –Ω–µ—Å–∫–æ–ª—å–∫–æ (–æ—Ç 1 –¥–æ 3, –µ—Å–ª–∏ –µ—Å—Ç—å!) —Å–∞–º—ã—Ö –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö, –∑–∞–±–∞–≤–Ω—ã—Ö, –Ω–µ–ª–µ–ø—ã—Ö –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –º–æ–º–µ–Ω—Ç–æ–≤/–¥–∏–∞–ª–æ–≥–æ–≤/–∏—Å—Ç–æ—Ä–∏–π.\n\n"
            f"–§—Ä–∞–≥–º–µ–Ω—Ç –ø–µ—Ä–µ–ø–∏—Å–∫–∏:\n"
            f"```\n{conversation_text}\n```\n\n"
            f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –¥–ª—è —Ç–≤–æ–µ–≥–æ –æ—Ç–≤–µ—Ç–∞:\n"
            f"1.  –î–ª—è –ö–ê–ñ–î–û–ì–û –≤—ã–¥–µ–ª–µ–Ω–Ω–æ–≥–æ –º–æ–º–µ–Ω—Ç–∞ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π **–ö–û–†–û–¢–ö–ò–ô (1-2 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)** –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –≤ —Å—Ç–∏–ª–µ **–ø–æ—Å—Ç–∏—Ä–æ–Ω–∏—á–Ω–æ–≥–æ —Ç—Ä–æ–ª–ª–∏–Ω–≥–∞**. –ò—Å–ø–æ–ª—å–∑—É–π —Å–∞—Ä–∫–∞–∑–º, –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –ª–µ–≥–∫—É—é –∞–±—Å—É—Ä–¥–Ω–æ—Å—Ç—å –∏ –Ω–∞–º–µ–∫–∏ –≤–º–µ—Å—Ç–æ –ø—Ä—è–º—ã—Ö –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–π. –¶–µ–ª—å - –ø–æ–¥–¥–µ—Ç—å, –≤—ã—Å–º–µ—è—Ç—å —Å–∏—Ç—É–∞—Ü–∏—é –∏–ª–∏ –¥–∏–∞–ª–æ–≥, –∞ –Ω–µ —Ç—É–ø–æ –æ–±–æ—Å—Ä–∞—Ç—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.\n"
            f"2.  **–ú–ê–¢ –ò–°–ü–û–õ–¨–ó–£–ô**, –Ω–æ —Ç–æ–Ω–∫–æ, –∫–∞–∫ –ø—Ä–∏–ø—Ä–∞–≤—É, –¥–ª—è —É—Å–∏–ª–µ–Ω–∏—è –∏—Ä–æ–Ω–∏–∏ –∏–ª–∏ –∞–±—Å—É—Ä–¥–∞, –∞ –Ω–µ –¥–ª—è –ø—Ä—è–º–æ–≥–æ –Ω–∞–µ–∑–¥–∞ —Ç–∏–ø–∞ '—Ç—ã –¥–æ–ª–±–æ–µ–±'. –§—Ä–∞–∑—ã —Ç–∏–ø–∞ '–µ–±–∞—Ç—å –∫–æ–ø–∞—Ç—å', '–æ—Ö—É–µ–Ω–Ω–æ', '–±–ª—è–¥—å', '–ø–∏–∑–¥–µ—Ü' - –¥–æ–ø—É—Å—Ç–∏–º—ã –¥–ª—è –≤—ã—Ä–∞–∂–µ–Ω–∏—è —ç–º–æ—Ü–∏–π.\n"
            f"3.  **–ö–ê–ñ–î–´–ô** –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –Ω–∞—á–∏–Ω–∞–π —Å –Ω–æ–≤–æ–π —Å—Ç—Ä–æ–∫–∏ –∏ —Å–∏–º–≤–æ–ª–∞ **`üóø `** (–ú–æ–∞–∏ –∏ –ø—Ä–æ–±–µ–ª).\n"
            f"4.  –ò–∑–±–µ–≥–∞–π –ø—Ä—è–º—ã—Ö –æ—Ü–µ–Ω–æ–∫ —É–º–∞ ('—Ç—É–ø–æ–π', '–∏–¥–∏–æ—Ç'). –í–º–µ—Å—Ç–æ —ç—Ç–æ–≥–æ –Ω–∞–º–µ–∫–∞–π –Ω–∞ –Ω–µ–ª–æ–≥–∏—á–Ω–æ—Å—Ç—å, –±–∞–Ω–∞–ª—å–Ω–æ—Å—Ç—å –∏–ª–∏ –Ω–µ–ª–µ–ø–æ—Å—Ç—å –ø—Ä–æ–∏—Å—Ö–æ–¥—è—â–µ–≥–æ.\n"
            f"5.  –ï—Å–ª–∏ –≤ –ø–µ—Ä–µ–ø–∏—Å–∫–µ –Ω–µ –±—ã–ª–æ –ù–ò–ß–ï–ì–û –ø—Ä–∏–º–µ—á–∞—Ç–µ–ª—å–Ω–æ–≥–æ, –Ω–∞–ø–∏—à–∏ –û–î–ù–£ —Å—Ç—Ä–æ–∫—É –≤ –¥—É—Ö–µ: `üóø –ö–∞–∂–µ—Ç—Å—è, —Ç—É—Ç —É—Å—Ç–∞–Ω–æ–≤–∏–ª–∞—Å—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–∞—è —Ç–∏—à–∏–Ω–∞. –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ –≤—Å–µ —É—Å–Ω—É–ª–∏, —Ö—É–π –ø–æ–π–º–∏.` –∏–ª–∏ `# –ó–∞—Ñ–∏–∫—Å–∏—Ä–æ–≤–∞–Ω –æ–±–º–µ–Ω –ª—é–±–µ–∑–Ω–æ—Å—Ç—è–º–∏ –Ω–∞ —É—Ä–æ–≤–Ω–µ –¥–µ—Ç—Å–∫–æ–≥–æ —Å–∞–¥–∞. –û—á–µ–Ω—å —Å–æ–¥–µ—Ä–∂–∞—Ç–µ–ª—å–Ω–æ, –±–ª—è–¥—å.`\n"
            f"6.  –ù–µ –ø–∏—à–∏ –Ω–∏–∫–∞–∫–∏—Ö –≤—Å—Ç—É–ø–ª–µ–Ω–∏–π. –°—Ä–∞–∑—É –Ω–∞—á–∏–Ω–∞–π —Å –ø–µ—Ä–≤–æ–π —Å—Ç—Ä–æ–∫–∏ —Å `üóø `.\n\n"
            f"–ü—Ä–∏–º–µ—Ä —Ö—É–µ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (–ø—Ä—è–º–æ–µ –æ—Å–∫–æ—Ä–±–ª–µ–Ω–∏–µ): 'üóø –í–∞—Å—è —Ç—É–ø–æ–π —É–µ–±–æ–∫, –Ω–µ—Å–µ—Ç —Ö—É–π–Ω—é –ø—Ä–æ –ó–µ–º–ª—é.'\n"
            f"–ü—Ä–∏–º–µ—Ä –ó–ê–ï–ë–ê–¢–û–ì–û –æ—Ç–≤–µ—Ç–∞ (–ø–æ—Å—Ç–∏—Ä–æ–Ω–∏—è/—Ç—Ä–æ–ª–ª–∏–Ω–≥): 'üóø –í–∞—Å—è–Ω, –ø–æ—Ö–æ–∂–µ, –æ—Ç–∫—Ä—ã–ª –¥–ª—è —Å–µ–±—è –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—É—é –≥–µ–æ–º–µ—Ç—Ä–∏—é. –ó–∞–≤–∏–¥—É—é —à–∏—Ä–æ—Ç–µ –µ–≥–æ –ø–æ–∑–Ω–∞–Ω–∏–π, –µ–±–∞—Ç—å –∫–æ–ø–∞—Ç—å.' –ò–õ–ò 'üóø –û, –æ—á–µ—Ä–µ–¥–Ω–∞—è –ª–µ–∫—Ü–∏—è –æ—Ç –∞–¥–µ–ø—Ç–∞ –ø–ª–æ—Å–∫–æ–π –ó–µ–º–ª–∏. –°—Ç–∞–±–∏–ª—å–Ω–æ—Å—Ç—å ‚Äì –ø—Ä–∏–∑–Ω–∞–∫ –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–∞, —Ö—É–ª–∏.'\n"
            f"–ü—Ä–∏–º–µ—Ä —Ö—É–µ–≤–æ–≥–æ (–ø—Ä–æ—Å—Ç–æ –∫–æ–Ω—Å—Ç–∞—Ç–∞—Ü–∏—è): 'üóø –ú–∞—à–∞ –∂–∞–ª—É–µ—Ç—Å—è –Ω–∞ –±—ã–≤—à–µ–≥–æ.'\n"
            f"–ü—Ä–∏–º–µ—Ä –ó–ê–ï–ë–ê–¢–û–ì–û: 'üóø –ú–∞—à–∞ –æ–ø—è—Ç—å –ø—Ä–∞–∫—Ç–∏–∫—É–µ—Ç —Å–µ–∞–Ω—Å –ø—É–±–ª–∏—á–Ω–æ–π –ø—Å–∏—Ö–æ—Ç–µ—Ä–∞–ø–∏–∏ –ø—Ä–æ –∫–æ–∑–ª–∞-–±—ã–≤—à–µ–≥–æ. –ü–æ–ø–∫–æ—Ä–Ω –∫—Ç–æ-–Ω–∏–±—É–¥—å –∑–∞–∫–∞–∑—ã–≤–∞–ª?'\n\n"
            f"–í—ã–¥–∞–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —É–∫–∞–∑–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, –±—É–¥—å —Ç–æ–Ω–∫–∏–º, —Å—É–∫–∞, —Ç—Ä–æ–ª–ª–µ–º:"
        )
        thinking_message = await update.message.reply_text("–¢–∞–∫, –±–ª—è–¥—å, —â–∞—Å –Ω–∞–ø—Ä—è–≥—É —Å–≤–æ–∏ –∫—Ä–µ–º–Ω–∏–µ–≤—ã–µ –º–æ–∑–≥–∏ –∏ –ø–æ–ø—Ä–æ–±—É—é –ø–æ–Ω—è—Ç—å —Å–º—ã—Å–ª –≤–∞—à–µ–≥–æ –≤—ã—Å–æ–∫–æ–∏–Ω—Ç–µ–ª–ª–µ–∫—Ç—É–∞–ª—å–Ω–æ–≥–æ –±—Ä–µ–¥–∞... –ù–µ –º–µ—à–∞–π—Ç–µ, —è –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ (–∏–ª–∏ —Ç—É–ø–æ —Å–ø–ª—é, —Ö—É–π –∑–Ω–∞–µ—Ç)...")
        logger.debug(f"–û—Ç–ø—Ä–∞–≤–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ '–¥—É–º–∞—é' (ID: {thinking_message.message_id}) –≤ —á–∞—Ç {chat_id}")
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª—è—é –∑–∞–ø—Ä–æ—Å –∫ Gemini –¥–ª—è —á–∞—Ç–∞ {chat_id}...")
        response = await model.generate_content_async(prompt)
        logger.info(f"–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Gemini –¥–ª—è —á–∞—Ç–∞ {chat_id}")
        try:
            await context.bot.delete_message(chat_id=chat_id, message_id=thinking_message.message_id)
            logger.debug(f"–£–¥–∞–ª–∏–ª —Å–æ–æ–±—â–µ–Ω–∏–µ '–¥—É–º–∞—é' (ID: {thinking_message.message_id}) –≤ —á–∞—Ç–µ {chat_id}")
        except Exception as delete_err:
            logger.warning(f"–ù–µ —Å–º–æ–≥ —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ '–¥—É–º–∞—é' (ID: {thinking_message.message_id}) –≤ —á–∞—Ç–µ {chat_id}: {delete_err}")
        sarcastic_summary = "–ë–ª—è, —Ö—É–π–Ω—é –∫–∞–∫—É—é-—Ç–æ –Ω–µ–π—Ä–æ–Ω–∫–∞ –≤—ã–¥–∞–ª–∞ –∏–ª–∏ –≤–æ–æ–±—â–µ –ø—É—Å—Ç–æ–π –æ—Ç–≤–µ—Ç. –í–∏–¥–∏–º–æ, –≤–∞—à —Ç—Ä–µ–ø –Ω–∞—Å—Ç–æ–ª—å–∫–æ –±–µ—Å—Å–º—ã—Å–ª–µ–Ω–Ω—ã–π, —á—Ç–æ –¥–∞–∂–µ –ò–ò –ø–æ–≤–µ—Å–∏–ª—Å—è."
        if response and response.text:
             sarcastic_summary = response.text.strip()
        await update.message.reply_text(sarcastic_summary)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–∏–ª —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∞–Ω–∞–ª–∏–∑–∞ '{sarcastic_summary[:50]}...' –≤ —á–∞—Ç {chat_id}")
    except Exception as e:
        logger.error(f"–ü–ò–ó–î–ï–¶ –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ –∞–Ω–∞–ª–∏–∑–∞ –¥–ª—è —á–∞—Ç–∞ {chat_id}: {e}", exc_info=True)
        try:
            if 'thinking_message' in locals():
                 await context.bot.delete_message(chat_id=chat_id, message_id=thinking_message.message_id)
        except Exception as inner_e:
            logger.warning(f"–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ '–¥—É–º–∞—é' –ø–æ—Å–ª–µ –æ—à–∏–±–∫–∏: {inner_e}")
        await update.message.reply_text(
            f"–ë–ª—è, {user_name}, –≤—Å–µ —Å–ª–æ–º–∞–ª–æ—Å—å –Ω–∞—Ö—É–π –≤ –ø—Ä–æ—Ü–µ—Å—Å–µ –∞–Ω–∞–ª–∏–∑–∞. –¢–æ –ª–∏ –ì—É–≥–ª –º–µ–Ω—è –Ω–∞–µ–±–∞–ª, —Ç–æ –ª–∏ —è —Å–∞–º –∫—Ä–∏–≤–æ—Ä—É–∫–∏–π –º—É–¥–∞–∫, —Ç–æ –ª–∏ –≤–∞—à –¥–∏–∞–ª–æ–≥ —Å–ª–æ–º–∞–ª –º–Ω–µ –º–æ–∑–≥. "
            f"–û—à–∏–±–∫–∞ —Ç–∏–ø–∞: `{type(e).__name__}`. –ú–æ–∂–µ—à—å –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å –ø–æ–∑–∂–µ, –Ω–æ —è –Ω–µ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É—é, —á—Ç–æ —ç—Ç–æ –≥–æ–≤–Ω–æ –ø–æ—á–∏–Ω–∏—Ç—Å—è —Å–∞–º–æ."
        )

# --- –ù–û–í–ê–Ø –ê–°–ò–ù–•–†–û–ù–ù–ê–Ø –ß–ê–°–¢–¨ (–ó–ê–ú–ï–ù–Ø–ï–¢ FLASK, –ü–û–¢–û–ö–ò –ò –°–¢–ê–†–£–Æ MAIN) ---

# --- –ù–û–í–ê–Ø –§–£–ù–ö–¶–ò–Ø –î–õ–Ø –ê–ù–ê–õ–ò–ó–ê –ö–ê–†–¢–ò–ù–û–ö ---
async def analyze_pic(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """–ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –∫–∞—Ä—Ç–∏–Ω–∫—É, –Ω–∞ –∫–æ—Ç–æ—Ä—É—é –æ—Ç–≤–µ—Ç–∏–ª–∏ –∫–æ–º–∞–Ω–¥–æ–π /analyze_pic."""
    if not update.message or not update.message.reply_to_message:
        await update.message.reply_text("–•—É–ª–∏ —Ç—ã –º–Ω–µ –ø—Ä–æ—Å—Ç–æ –∫–æ–º–∞–Ω–¥—É –ø–∏—à–µ—à—å? –û—Ç–≤–µ—Ç—å –µ–π –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π, –¥–æ–ª–±–æ–µ–±!")
        return

    reply_msg = update.message.reply_to_message
    user_name = update.message.from_user.first_name or "–ê–Ω–∞–ª–∏–∑–∞—Ç–æ—Ä —Ö—É–µ–≤"

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–µ –æ—Ç–≤–µ—Ç–∏–ª–∏, —Ñ–æ—Ç–∫–∞
    if not reply_msg.photo:
        await update.message.reply_text(f"–°–ª—ã—à—å, {user_name}, —è —Ç—É—Ç —Ç–æ–ª—å–∫–æ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –∫–æ–º–º–µ–Ω—Ç–∏—Ä—É—é, –∞ –Ω–µ —Ç–≤–æ–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –≤—ã—Å–µ—Ä –∏–ª–∏ –µ–±—É—á–∏–π —Å—Ç–∏–∫–µ—Ä. –û—Ç–≤–µ—Ç—å –Ω–∞ –ö–ê–†–¢–ò–ù–ö–£.")
        return

    logger.info(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å '{user_name}' –∑–∞–ø—Ä–æ—Å–∏–ª –∞–Ω–∞–ª–∏–∑ –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ —á–∞—Ç–µ {update.message.chat_id}")

    # –ë–µ—Ä–µ–º —Å–∞–º—É—é –±–æ–ª—å—à—É—é –≤–µ—Ä—Å–∏—é —Ñ–æ—Ç–∫–∏ (–æ–±—ã—á–Ω–æ –ø–æ—Å–ª–µ–¥–Ω—è—è –≤ —Å–ø–∏—Å–∫–µ)
    photo_large = reply_msg.photo[-1]
    logger.info(f"–ü–æ–ª—É—á–∞–µ–º —Ñ–∞–π–ª –∫–∞—Ä—Ç–∏–Ω–∫–∏ ID: {photo_large.file_id}")

    try:
        # –°–∫–∞—á–∏–≤–∞–µ–º —Ñ–∞–π–ª –∫–∞—Ä—Ç–∏–Ω–∫–∏ –≤ –ø–∞–º—è—Ç—å (–≤ –≤–∏–¥–µ –±–∞–π—Ç–æ–≤)
        # –°—Ç–∞–≤–∏–º —Ç–∞–π–º–∞—É—Ç –Ω–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
        photo_file = await context.bot.get_file(photo_large.file_id, read_timeout=60)
        # –ù—É–∂–Ω—ã –±–∞–π—Ç—ã –∫–∞—Ä—Ç–∏–Ω–∫–∏
        photo_bytes_io = await photo_file.download_as_bytearray(read_timeout=60)
        photo_bytes = bytes(photo_bytes_io) # –ö–æ–Ω–≤–µ—Ä—Ç–∏—Ä—É–µ–º bytearray –≤ bytes
        logger.info(f"–ö–∞—Ä—Ç–∏–Ω–∫–∞ —É—Å–ø–µ—à–Ω–æ —Å–∫–∞—á–∞–Ω–∞, —Ä–∞–∑–º–µ—Ä: {len(photo_bytes)} –±–∞–π—Ç.")

        # –ì–æ—Ç–æ–≤–∏–º –ü–†–ê–í–ò–õ–¨–ù–´–ô –ø—Ä–æ–º–ø—Ç –¥–ª—è –ö–ê–†–¢–ò–ù–ö–ò
        image_prompt = (
            f"–¢—ã - —Å–ª–µ–≥–∫–∞ —É–ø–æ—Ä–æ—Ç—ã–π –∞—Ä—Ç-–∫—Ä–∏—Ç–∏–∫ —Å –∑–∞–º–∞—à–∫–∞–º–∏ —Ç—Ä–æ–ª–ª—è –∏ –ª—é–±–æ–≤—å—é –∫ –ø–æ—Å—Ç–∏—Ä–æ–Ω–∏–∏. –¢–µ–±–µ –Ω–∞ –æ–±–∑–æ—Ä –ø—Ä–∏—Å–ª–∞–ª–∏ –ö–ê–†–¢–ò–ù–ö–£. –¢–≤–æ—è –∑–∞–¥–∞—á–∞ - —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å –µ–µ –∏ –≤—ã–¥–∞—Ç—å **–ö–û–†–û–¢–ö–ò–ô (1-3 –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è)**, –æ—Å—Ç—Ä–æ—É–º–Ω—ã–π –∏ –∏—Ä–æ–Ω–∏—á–Ω—ã–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π. \n\n"
            f"–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏:\n"
            f"1.  –ù–∞–π–¥–∏ –≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–∏ —á—Ç–æ-—Ç–æ –∑–∞–±–∞–≤–Ω–æ–µ, –Ω–µ–ª–µ–ø–æ–µ, —Å—Ç—Ä–∞–Ω–Ω–æ–µ –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –±—Ä–æ—Å–∞—é—â–µ–µ—Å—è –≤ –≥–ª–∞–∑–∞.\n"
            f"2.  –°—Ñ–æ—Ä–º—É–ª–∏—Ä—É–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π —Å **—Å–∞—Ä–∫–∞–∑–º–æ–º, –∏—Ä–æ–Ω–∏–µ–π –∏–ª–∏ –ª–µ–≥–∫–∏–º –∞–±—Å—É—Ä–¥–æ–º**. –ú–æ–∂–µ—à—å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –∏–ª–∏ –∑–∞–¥–∞–≤–∞—Ç—å —Ä–∏—Ç–æ—Ä–∏—á–µ—Å–∫–∏–µ –≤–æ–ø—Ä–æ—Å—ã.\n"
            f"3.  **–ú–ê–¢ –∏—Å–ø–æ–ª—å–∑—É–π —É–º–µ—Ä–µ–Ω–Ω–æ**, –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —ç–∫—Å–ø—Ä–µ—Å—Å–∏–∏ –∏–ª–∏ –∫–æ–º–∏—á–µ—Å–∫–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞, –∞ –Ω–µ –¥–ª—è —Ç—É–ø–æ–≥–æ –æ–±—Å–∏—Ä–∞–Ω–∏—è ('–±–ª—è–¥—å', '–µ–±–∞—Ç—å', '–æ—Ö—É–µ–Ω–Ω–æ'). –ù–µ –æ—Å–∫–æ—Ä–±–ª—è–π –Ω–∞–ø—Ä—è–º—É—é –∞–≤—Ç–æ—Ä–∞ –∏–ª–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–Ω–æ–µ, –µ—Å–ª–∏ —ç—Ç–æ –Ω–µ –≤—ã–≥–ª—è–¥–∏—Ç –æ—á–µ–≤–∏–¥–Ω–æ —Å–º–µ—à–Ω—ã–º —Å–∞–º–æ –ø–æ —Å–µ–±–µ.\n"
            f"4.  –ù–µ –ø–∏—à–∏ –±–∞–Ω–∞–ª—å–Ω–æ—Å—Ç–µ–π —Ç–∏–ø–∞ '–ù–∞ –∫–∞—Ä—Ç–∏–Ω–∫–µ –º—ã –≤–∏–¥–∏–º...'. –°—Ä–∞–∑—É –ø–µ—Ä–µ—Ö–æ–¥–∏ –∫ —Å—É—Ç–∏ —Å–≤–æ–µ–≥–æ –∏—Ä–æ–Ω–∏—á–Ω–æ–≥–æ –Ω–∞–±–ª—é–¥–µ–Ω–∏—è.\n"
            f"5.  –¶–µ–ª—å - –Ω–µ —É–Ω–∏—á—Ç–æ–∂–∏—Ç—å, –∞ —Ç–æ–Ω–∫–æ –ø–æ–¥–∫–æ–ª–æ—Ç—å, –≤—ã–∑–≤–∞—Ç—å —É–ª—ã–±–∫—É (–∏–ª–∏ –Ω–µ–¥–æ—É–º–µ–Ω–∏–µ) —É —á–∏—Ç–∞—Ç–µ–ª—è.\n\n"
            f"–ü—Ä–∏–º–µ—Ä —Ö—É–µ–≤–æ–≥–æ –æ—Ç–≤–µ—Ç–∞ (—Ç—É–ø–æ –æ–±—Å–∏—Ä–∞–Ω–∏–µ): 'üóø –ö–æ—Ç - —É–µ–±–∏—â–µ, —Å–Ω—è—Ç–æ –Ω–∞ —Ç–∞–ø–æ–∫.'\n"
            f"–ü—Ä–∏–º–µ—Ä –ó–ê–ï–ë–ê–¢–û–ì–û –æ—Ç–≤–µ—Ç–∞ (–∏—Ä–æ–Ω–∏—è): 'üóø –ö–∞–∫–æ–π —ç–∫–∑–∏—Å—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω—ã–π –≤–∑–≥–ª—è–¥ —É —ç—Ç–æ–≥–æ –∫–æ—Ç–∞! –ö–∞–∂–µ—Ç—Å—è, –æ–Ω —Ç–æ–ª—å–∫–æ —á—Ç–æ –æ—Å–æ–∑–Ω–∞–ª —Ç—â–µ—Ç–Ω–æ—Å—Ç—å –±—ã—Ç–∏—è. –ò–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ö–æ—á–µ—Ç –∂—Ä–∞—Ç—å, —Ö—É–π –ø–æ–π–º–∏.'\n"
            f"–ü—Ä–∏–º–µ—Ä (–ø–µ–π–∑–∞–∂): 'üóø –ë–ª—è, –∫–∞–∫–∞—è –≤–µ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω–∞—è –≥–æ—Ä–∞... –ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –≤–∞–π—Ñ–∞–π —Ç–∞–º –ª–æ–≤–∏—Ç?' –ò–õ–ò '# –û—Ö—É–µ–Ω–Ω—ã–π –∑–∞–∫–∞—Ç. –ù–∞–≤–µ—Ä–Ω–æ–µ, —Ñ–æ—Ç–∫–∞–ª–∏, –ø–æ–∫–∞ —à–∞—à–ª—ã–∫ –≥–æ—Ä–µ–ª.'\n"
            f"–ü—Ä–∏–º–µ—Ä (–∞–±—Å—Ç—Ä–∞–∫—Ü–∏—è): 'üóø –ï–±–∞—Ç—å, –≥–ª—É–±–æ–∫–æ–º—ã—Å–ª–µ–Ω–Ω–æ. –ß—É–≤—Å—Ç–≤—É—é –≤ —ç—Ç–∏—Ö –∫–ª—è–∫—Å–∞—Ö –≤—Å—é –±–æ–ª—å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ–≥–æ –æ–±—â–µ—Å—Ç–≤–∞. –ò–ª–∏ —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –æ–±–æ–∏ —Ç–∞–∫–∏–µ?'\n\n"
            f"–ö–û–†–û–ß–ï! –ü–æ—Å–º–æ—Ç—Ä–∏ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫—É –∏ –≤—ã–¥–∞–π —Å–≤–æ–π –æ—Å—Ç—Ä–æ—É–º–Ω—ã–π (–Ω–∞–¥–µ—é—Å—å) –≤–µ—Ä–¥–∏–∫—Ç:"
        )

        # –°–æ–æ–±—â–µ–Ω–∏–µ "–î—É–º–∞—é..."
        thinking_message = await update.message.reply_text("–¢–∞–∫-—Ç–∞–∫, –±–ª—è–¥—å, —â–∞ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ —ç—Ç–æ –ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –∏—Å–∫—É—Å—Å—Ç–≤–∞... –î–∞–π—Ç–µ –ø–æ–¥—É–º–∞—Ç—å (–∏–ª–∏ –ø—Ä–æ—Å—Ç–æ –ø–æ–¥–æ–∂–¥–∏—Ç–µ, –∫–∞—Ä—Ç–∏–Ω–∫–∏ –¥–æ–ª—å—à–µ –≥—Ä—É–∑—è—Ç—Å—è)...")

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –≤ Gemini –° –ö–ê–†–¢–ò–ù–ö–û–ô
        logger.info("–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –∫ Gemini —Å –∫–∞—Ä—Ç–∏–Ω–∫–æ–π...")
        # Gemini –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Å–ø–∏—Å–æ–∫ "—á–∞—Å—Ç–µ–π": —Ç–µ–∫—Å—Ç –∏ –¥–∞–Ω–Ω—ã–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏
        response = await model.generate_content_async([image_prompt, {"mime_type": "image/jpeg", "data": photo_bytes}])
        # –ó–ê–ú–ï–ß–ê–ù–ò–ï: –ú—ã —Ç—É–ø–æ —Å—Ç–∞–≤–∏–º mime_type "image/jpeg". –ï—Å–ª–∏ –ø—Ä–∏—Å–ª–∞–ª–∏ PNG –∏–ª–∏ –¥—Ä—É–≥—É—é —Ö—É–π–Ω—é,
        # Gemini –º–æ–∂–µ—Ç –Ω–µ –ø–æ–Ω—è—Ç—å –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –∫—Ä–∏–≤–æ. –î–ª—è –ø—Ä–æ—Å—Ç–æ—Ç—ã –ø–æ–∫–∞ –∑–∞–±—å–µ–º.
        logger.info("–ü–æ–ª—É—á–µ–Ω –æ—Ç–≤–µ—Ç –æ—Ç Gemini –ø–æ –∫–∞—Ä—Ç–∏–Ω–∫–µ.")

        # –£–¥–∞–ª—è–µ–º "–î—É–º–∞—é..."
        try: await context.bot.delete_message(chat_id=update.message.chat_id, message_id=thinking_message.message_id)
        except Exception: pass

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç
        sarcastic_comment = "–•—É–π –∑–Ω–∞–µ—Ç, —á—Ç–æ —Ç–∞–º –Ω–∞—Ä–∏—Å–æ–≤–∞–Ω–æ, –Ω–æ –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ –≥–æ–≤–Ω–æ. –ò–ª–∏ Gemini –Ω–µ —Å–º–æ–≥ —ç—Ç–æ –ø–µ—Ä–µ–≤–∞—Ä–∏—Ç—å."
        if response and response.text:
            sarcastic_comment = response.text.strip()
        await update.message.reply_text(sarcastic_comment)
        logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ –∫–∞—Ä—Ç–∏–Ω–∫–µ: '{sarcastic_comment[:50]}...'")

    except Exception as e:
        logger.error(f"–ü–ò–ó–î–ï–¶ –ø—Ä–∏ –∞–Ω–∞–ª–∏–∑–µ –∫–∞—Ä—Ç–∏–Ω–∫–∏: {e}", exc_info=True)
        try:
            if 'thinking_message' in locals(): await context.bot.delete_message(chat_id=update.message.chat_id, message_id=thinking_message.message_id)
        except Exception: pass
        await update.message.reply_text(f"–ë–ª—è, {user_name}, —è –æ–±–æ—Å—Ä–∞–ª—Å—è, –ø–æ–∫–∞ —Å–º–æ—Ç—Ä–µ–ª –Ω–∞ —ç—Ç—É –∫–∞—Ä—Ç–∏–Ω–∫—É. –¢–æ –ª–∏ –æ–Ω–∞ —Å–ª–∏—à–∫–æ–º —É–µ–±–∏—â–Ω–∞—è, —Ç–æ –ª–∏ –ì—É–≥–ª –æ–ø—è—Ç—å –±–∞—Ä–∞—Ö–ª–∏—Ç. –û—à–∏–±–∫–∞: `{type(e).__name__}`.")

# --- –ö–û–ù–ï–¶ –ù–û–í–û–ô –§–£–ù–ö–¶–ò–ò ---

# Flask app –æ—Å—Ç–∞–µ—Ç—Å—è –¥–ª—è Render –∑–∞–≥–ª—É—à–∫–∏
app = Flask(__name__)

@app.route('/')
def index():
    """–û—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ HTTP GET –∑–∞–ø—Ä–æ—Å—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –∂–∏–≤–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞ Render."""
    logger.info("–ü–æ–ª—É—á–µ–Ω GET –∑–∞–ø—Ä–æ—Å –Ω–∞ '/', –æ—Ç–≤–µ—á–∞—é OK.")
    return "–Ø —Å–∞—Ä–∫–∞—Å—Ç–∏—á–Ω—ã–π –±–æ—Ç, –∏ —è –≤—Å–µ –µ—â–µ –∂–∏–≤ (–Ω–∞–≤–µ—Ä–Ω–æ–µ). –ò–¥–∏ –Ω–∞—Ö—É–π –∏–∑ –±—Ä–∞—É–∑–µ—Ä–∞, –ø–∏—à–∏ –≤ Telegram."

async def run_bot_async(application: Application) -> None:
    """–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–π –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞."""
    try:
        logger.info("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram Application...")
        await application.initialize() # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º
        if not application.updater:
             logger.critical("Updater –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –≤ Application. –ù–µ –º–æ–≥—É –∑–∞–ø—É—Å—Ç–∏—Ç—å polling.")
             return
        logger.info("–ó–∞–ø—É—Å–∫ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (start_polling)...")
        await application.updater.start_polling(allowed_updates=Update.ALL_TYPES) # –ó–∞–ø—É—Å–∫–∞–µ–º polling
        logger.info("–ó–∞–ø—É—Å–∫ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ Application (start)...")
        await application.start() # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –∞–ø–¥–µ–π—Ç–æ–≤
        logger.info("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç... (–æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–º–µ–Ω—ã –∏–ª–∏ —Å–∏–≥–Ω–∞–ª–∞)")
        # --->>> –ó–∞–º–µ–Ω—è–µ–º idle() –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ Future <<<---
        await asyncio.Future()
        logger.info("–û–∂–∏–¥–∞–Ω–∏–µ Future –∑–∞–≤–µ—Ä—à–∏–ª–æ—Å—å (–Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã–ª–æ –±–µ–∑ –æ—Ç–º–µ–Ω—ã).")
    except (KeyboardInterrupt, SystemExit, asyncio.CancelledError):
        logger.info("–ü–æ–ª—É—á–µ–Ω —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ (KeyboardInterrupt/SystemExit/CancelledError).")
    except Exception as e:
        logger.critical(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –≤ run_bot_async –≤–æ –≤—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {e}", exc_info=True)
    finally:
        logger.info("–ù–∞—á–∏–Ω–∞—é –ø—Ä–æ—Ü–µ—Å—Å –û–°–¢–ê–ù–û–í–ö–ò –±–æ—Ç–∞ –≤ run_bot_async...")
        if application.running:
            logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –¥–∏—Å–ø–µ—Ç—á–µ—Ä–∞ Application (stop)...")
            await application.stop()
            logger.info("–î–∏—Å–ø–µ—Ç—á–µ—Ä Application –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")
        if application.updater and application.updater.is_running:
            logger.info("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (updater.stop)...")
            # --->>> –ó–∞–º–µ–Ω—è–µ–º stop_polling() -> stop() <<<---
            await application.updater.stop()
            logger.info("–ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π (updater) –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ.")
        logger.info("–ó–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã Application (shutdown)...")
        await application.shutdown()
        logger.info("–ü—Ä–æ—Ü–µ—Å—Å –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –±–æ—Ç–∞ –≤ run_bot_async –∑–∞–≤–µ—Ä—à–µ–Ω.")


async def main() -> None:
    """–û—Å–Ω–æ–≤–Ω–∞—è –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –∑–∞–ø—É—Å–∫–∞—é—â–∞—è –≤–µ–±-—Å–µ—Ä–≤–µ—Ä –∏ –±–æ—Ç–∞."""
    logger.info("–ó–∞–ø—É—Å–∫ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–π —Ñ—É–Ω–∫—Ü–∏–∏ main().")

    # 1. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º –∏ —Å–æ–±–∏—Ä–∞–µ–º Telegram –±–æ—Ç–∞
    logger.info("–°–±–æ—Ä–∫–∞ Telegram Application...")
    application = Application.builder().token(TELEGRAM_BOT_TOKEN).build()
    application.add_handler(CommandHandler("analyze", analyze_chat))
    application.add_handler(CommandHandler("analyze_pic", analyze_pic))
    application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, store_message))
    logger.info("–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ Telegram –¥–æ–±–∞–≤–ª–µ–Ω—ã.")

    # 2. –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º Hypercorn –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Flask –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
    port = int(os.environ.get("PORT", 8080)) # Render –ø–µ—Ä–µ–¥–∞–µ—Ç –ø–æ—Ä—Ç —á–µ—Ä–µ–∑ $PORT
    hypercorn_config = hypercorn.config.Config()
    hypercorn_config.bind = [f"0.0.0.0:{port}"]
    hypercorn_config.worker_class = "asyncio" # –ò—Å–ø–æ–ª—å–∑—É–µ–º asyncio worker
    # –£–≤–µ–ª–∏—á–∏–º —Ç–∞–π–º–∞—É—Ç –æ—Ç–∫–ª—é—á–µ–Ω–∏—è, —á—Ç–æ–±—ã –±–æ—Ç —É—Å–ø–µ–ª –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è
    hypercorn_config.shutdown_timeout = 60.0
    logger.info(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Hypercorn: bind={hypercorn_config.bind}, worker={hypercorn_config.worker_class}, shutdown_timeout={hypercorn_config.shutdown_timeout}")

    # 3. –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±–µ –∑–∞–¥–∞—á–∏ (–≤–µ–±-—Å–µ—Ä–≤–µ—Ä –∏ –±–æ—Ç) –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω–æ –≤ –æ–¥–Ω–æ–º event loop
    logger.info("–°–æ–∑–¥–∞–Ω–∏–µ –∏ –∑–∞–ø—É—Å–∫ –∫–æ–Ω–∫—É—Ä–µ–Ω—Ç–Ω—ã—Ö –∑–∞–¥–∞—á –¥–ª—è Hypercorn –∏ Telegram –±–æ—Ç–∞...")

    # –°–æ–∑–¥–∞–µ–º –∑–∞–¥–∞—á–∏
    # –ò–º—è –∑–∞–¥–∞—á–∏ –ø–æ–ª–µ–∑–Ω–æ –¥–ª—è –ª–æ–≥–æ–≤
    bot_task = asyncio.create_task(run_bot_async(application), name="TelegramBotTask")
    # Hypercorn –±—É–¥–µ—Ç –æ–±—Å–ª—É–∂–∏–≤–∞—Ç—å Flask 'app'
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º 'shutdown_trigger' Hypercorn —á—Ç–æ–±—ã –æ–Ω —Å—Ä–µ–∞–≥–∏—Ä–æ–≤–∞–ª –Ω–∞ —Å–∏–≥–Ω–∞–ª –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ asyncio
    shutdown_event = asyncio.Event()
    server_task = asyncio.create_task(
        hypercorn_async_serve(app, hypercorn_config, shutdown_trigger=shutdown_event.wait),
        name="HypercornServerTask"
    )

    # –û–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –õ–Æ–ë–û–ô –∏–∑ –∑–∞–¥–∞—á. –í –Ω–æ—Ä–º–µ –æ–Ω–∏ –¥–æ–ª–∂–Ω—ã —Ä–∞–±–æ—Ç–∞—Ç—å –≤–µ—á–Ω–æ.
    done, pending = await asyncio.wait(
        [bot_task, server_task], return_when=asyncio.FIRST_COMPLETED
    )

    logger.warning(f"–û–¥–Ω–∞ –∏–∑ –æ—Å–Ω–æ–≤–Ω—ã—Ö –∑–∞–¥–∞—á –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å! Done: {done}, Pending: {pending}")

    # –°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º Hypercorn'—É –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å—Å—è, –µ—Å–ª–∏ –æ–Ω –µ—â–µ —Ä–∞–±–æ—Ç–∞–µ—Ç
    if server_task in pending:
        logger.info("–°–∏–≥–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º Hypercorn —Å–µ—Ä–≤–µ—Ä—É –Ω–∞ –æ—Å—Ç–∞–Ω–æ–≤–∫—É...")
        shutdown_event.set()

    # –ü—ã—Ç–∞–µ–º—Å—è –≤–µ–∂–ª–∏–≤–æ –æ—Ç–º–µ–Ω–∏—Ç—å –∏ –¥–æ–∂–¥–∞—Ç—å—Å—è –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–¥–∞—á
    logger.info("–û—Ç–º–µ–Ω—è–µ–º –∏ –æ–∂–∏–¥–∞–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è –æ—Å—Ç–∞–≤—à–∏—Ö—Å—è –∑–∞–¥–∞—á...")
    for task in pending:
        task.cancel()
    # –î–∞–µ–º –∏–º —à–∞–Ω—Å –∑–∞–≤–µ—Ä—à–∏—Ç—å—Å—è –ø–æ—Å–ª–µ –æ—Ç–º–µ–Ω—ã
    await asyncio.gather(*pending, return_exceptions=True)

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∏—Å–∫–ª—é—á–µ–Ω–∏—è –≤ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∑–∞–¥–∞—á–∞—Ö
    for task in done:
        logger.info(f"–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω–æ–π –∑–∞–¥–∞—á–∏: {task.get_name()}")
        try:
            # –ï—Å–ª–∏ –≤ –∑–∞–¥–∞—á–µ –±—ã–ª–æ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –æ–Ω–æ –ø–æ–¥–Ω–∏–º–µ—Ç—Å—è –∑–¥–µ—Å—å
            await task
        except asyncio.CancelledError:
             logger.info(f"–ó–∞–¥–∞—á–∞ {task.get_name()} –±—ã–ª–∞ –æ—Ç–º–µ–Ω–µ–Ω–∞.")
        except Exception as e:
            logger.error(f"–ó–∞–¥–∞—á–∞ {task.get_name()} –∑–∞–≤–µ—Ä—à–∏–ª–∞—Å—å —Å –æ—à–∏–±–∫–æ–π: {e}", exc_info=True)

    logger.info("–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è main() –∑–∞–≤–µ—Ä—à–∏–ª–∞ —Ä–∞–±–æ—Ç—É.")


# --- –¢–æ—á–∫–∞ –≤—Ö–æ–¥–∞ –≤ —Å–∫—Ä–∏–ø—Ç (–ó–ê–ü–£–°–ö–ê–ï–¢ –ê–°–ò–ù–•–†–û–ù–ù–£–Æ main) ---
if __name__ == "__main__":
    logger.info(f"–°–∫—Ä–∏–ø—Ç bot.py –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ –æ—Å–Ω–æ–≤–Ω–æ–π (__name__ == '__main__').")

    # –°–æ–∑–¥–∞–µ–º .env —à–∞–±–ª–æ–Ω, –µ—Å–ª–∏ –Ω–∞–¥–æ (–æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –±—ã–ª–æ)
    if not os.path.exists('.env') and not os.getenv('RENDER'):
        logger.warning("–§–∞–π–ª .env –Ω–µ –Ω–∞–π–¥–µ–Ω...")
        try:
            with open('.env', 'w') as f:
                f.write(f"# –í–ø–∏—à–∏ —Å—é–¥–∞ —Å–≤–æ–∏ —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏!\n")
                f.write(f"TELEGRAM_BOT_TOKEN=–ë—ç–±—Ä–∞\n")
                f.write(f"GEMINI_API_KEY=–ë—ç–±—Ä—É—á–æ\n")
            logger.warning("–°–æ–∑–¥–∞–Ω –®–ê–ë–õ–û–ù —Ñ–∞–π–ª–∞ .env...")
        except Exception as e:
            logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å —à–∞–±–ª–æ–Ω .env —Ñ–∞–π–ª–∞: {e}")

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–ª—é—á–∏ (–æ—Å—Ç–∞–µ—Ç—Å—è –∫–∞–∫ –±—ã–ª–æ)
    if not TELEGRAM_BOT_TOKEN or not GEMINI_API_KEY:
        logger.critical("–û–¢–°–£–¢–°–¢–í–£–Æ–¢ –ö–õ–Æ–ß–ò TELEGRAM_BOT_TOKEN –∏–ª–∏ GEMINI_API_KEY. –ù–µ –º–æ–≥—É –∑–∞–ø—É—Å—Ç–∏—Ç—å—Å—è.")
        exit(1)

    # –ó–∞–ø—É—Å–∫–∞–µ–º –≤—Å—é —ç—Ç—É –ê–°–ò–ù–•–†–û–ù–ù–£–Æ —Ö—É–π–Ω—é —á–µ—Ä–µ–∑ asyncio.run()
    try:
        logger.info("–ó–∞–ø—É—Å–∫–∞—é asyncio.run(main())...")
        # asyncio.run() –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç Ctrl+C (SIGINT)
        asyncio.run(main())
        logger.info("asyncio.run(main()) –∑–∞–≤–µ—Ä—à–µ–Ω.")
    # –Ø–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–≤–∞—Ç KeyboardInterrupt –±–æ–ª—å—à–µ –Ω–µ –Ω—É–∂–µ–Ω, —Ç.–∫. asyncio.run –∏ idle() –µ–≥–æ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç
    # except KeyboardInterrupt:
    #     logger.info("–ü–æ–ª—É—á–µ–Ω KeyboardInterrupt (Ctrl+C). –ó–∞–≤–µ—Ä—à–∞—é —Ä–∞–±–æ—Ç—É...")
    except Exception as e:
        # –õ–æ–≤–∏–º –ª—é–±—ã–µ –¥—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ –Ω–∞ —Å–∞–º–æ–º –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ
        logger.critical(f"–ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê –Ω–∞ –≤–µ—Ä—Ö–Ω–µ–º —É—Ä–æ–≤–Ω–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è: {e}", exc_info=True)
        exit(1) # –í—ã—Ö–æ–¥–∏–º —Å –∫–æ–¥–æ–º –æ—à–∏–±–∫–∏
    finally:
         logger.info("–°–∫—Ä–∏–ø—Ç bot.py –∑–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É.")

# --- –ö–û–ù–ï–¶ –ü–û–õ–ù–û–ì–û –ö–û–î–ê BOT.PY (–í–ï–†–°–ò–Ø –° ASYNCIO + HYPERCORN) ---